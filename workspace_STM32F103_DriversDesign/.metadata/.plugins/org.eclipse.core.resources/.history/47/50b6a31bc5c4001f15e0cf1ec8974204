/*
 * stm32f103xx_gpio.h
 *
 *  Created on: Dec 27, 2024
 *      Author: joane
 */

#ifndef DRIVERS_INC_STM32F103XX_GPIO_H_
#define DRIVERS_INC_STM32F103XX_GPIO_H_

#include "stm32f103xx.h"
/******************************************
 * GPIO pin enumeration
 * Type: GPIO_Pin_t
 *****************************************/
typedef enum{
	GPIO_PIN_0,
	GPIO_PIN_1,
	GPIO_PIN_2,
	GPIO_PIN_3,
	GPIO_PIN_4,
	GPIO_PIN_5,
	GPIO_PIN_6,
	GPIO_PIN_7,
	GPIO_PIN_8,
	GPIO_PIN_9,
	GPIO_PIN_10,
	GPIO_PIN_11,
	GPIO_PIN_12,
	GPIO_PIN_13,
	GPIO_PIN_14,
	GPIO_PIN_15
}GPIO_Pin_t;
/******************************************
 * GPIO Input Configuration
 * Type: GPIO_ConfigInput_t
 *****************************************/
typedef enum{
	GPIO_AN,		/*GPIO Analog mode*/
	GPIO_FL,		/*GPIO Floating input mode*/
	GPIO_IN,		/*GPIO Input pull-up or pull-down*/
	GPIO_RES		/*GPIO Reserved*/
}GPIO_ConfigInput_t;
/******************************************
 * GPIO Output Configuration
 * Type: GPIO_ConfigOutput_t
 *****************************************/
typedef enum{
	GPIO_GP_PP,		/*GPIO General Purpose push-pull*/
	GPIO_GP_OP,		/*GPIO General Purpose open-drain*/
	GPIO_AF_PP,		/*GPIO Alternate function push-pull*/
	GPIO_AF_OP		/*GPIO Alternate function open-drain*/
}GPIO_ConfigOutput_t;
/*******************************************
 * GPIO Mode Configuration (input or output)
 * Type: GPIO_Mode_t
 ******************************************/
typedef enum{
	GPIO_INPUT_MODE,
	GPIO_OUTPUT_MODE_10MHZ,
	GPIO_OUTPUT_MODE_2MHZ,
	GPIO_OUTPUT_MODE_50MHZ
}GPIO_Mode_t;

/*******************************************
 * GPIO Configuration Options
 * Type: GPIO_Congif_t
 ******************************************/
typedef struct{
	GPIO_Pin_t GPIO_Pin;
	GPIO_Mode_t GPIO_Mode;
	GPIO_ConfigInput_t GPIO_ConfigInput;
	GPIO_ConfigOutput_t GPIO_ConfigOutput;
}GPIO_Congif_t;
/*******************************************
 * GPIO Handler
 * Type: GPIO_handle_t
 ******************************************/
typedef struct{
	RCC_RegDef_t *pRCC;
	GPIO_RegDef_t *pGPIOx;
	GPIO_Congif_t GPIO_config[2];
}GPIO_handle_t;

/*******************************************
 * GPIO Functions
 ******************************************/
void GPIO_CLK_Status(GPIO_RegDef_t *pGPIOx, uint8_t status);
void GPIO_Input_Setup(GPIO_handle_t *pGPIOHandle, GPIO_RegDef_t *pGPIOx, GPIO_Pin_t pin, GPIO_ConfigInput_t InputType){
static void GPIO_DeInit(GPIO_RegDef_t *pGPIOx);

uint8_t GPIO_ReadPin(GPIO_RegDef_t *pGPIOx, GPIO_Pin_t pin);
uint16_t GPIO_ReadPort(GPIO_RegDef_t *pGPIOx);

void GPIO_WritePin(GPIO_RegDef_t *pGPIOx, GPIO_Pin_t pin, uint8_t value);
void GPIO_WritePort(GPIO_RegDef_t *pGPIOx, uint16_t value);
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx, GPIO_Pin_t pin);

#endif /* DRIVERS_INC_STM32F103XX_GPIO_H_ */
